#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys, argparse
import gptvm
import gptvm.log


def execfile(filepath, globals=None, locals=None):
    if globals is None:
        globals = {}
    globals.update(
        {
            "__file__": filepath,
            "__name__": "__main__",
        }
    )
    with open(filepath, "rb") as file:
        exec(compile(file.read(), filepath, "exec"), globals, locals)


parser = argparse.ArgumentParser(description="GPTVM AI inference system driver")
parser.add_argument(
    "--opt",
    type=str,
    help="Optimization strategy",
    choices=["trt_llm", "vllm", "torch"],
)
parser.add_argument("app", metavar="app.py", help="Python application")
parser.add_argument(
    "-d", action="store_true", default=False, help="Enable debug output"
)
args, app_args = parser.parse_known_args()

config = gptvm.get_config()

if args.opt == "trt_llm":
    import gptvm.optimize.trt_llm
elif args.opt == "vllm":
    import gptvm.optimize.vllm
elif args.opt == "torch":
    config.capture_torch_forward = True

if args.d:
    config.debug = True
    gptvm.log.setDebug()

sys.argv = [args.app] + app_args
execfile(args.app)
